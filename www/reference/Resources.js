{
	type: "widget",
	is_extended: true,
	template: ["<h1 id=\"resources-and-localization\">Resources and localization</h1>\n<p>Resources are widget data that can be localized. They also serve dual purpose: \nwith resources you can set styles and properties of elements from widgets without modifying their template.\nJust like the rest of widget configs, <b>resources are static</b>! That means you should not modify them in code.</p>\n<p>Here is an example of localized widget:</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:define</span> <span class=\"hljs-attribute\">title</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">main_template</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:static_value</span> <span class=\"hljs-attribute\">resource_id</span>=<span class=\"hljs-value\">\"$widget.HELLO_STRING\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:static_value</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">main_template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:define</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:define_resources</span> <span class=\"hljs-attribute\">for</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>Hello world!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:define_resources</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:define_resources</span> <span class=\"hljs-attribute\">for</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"ru\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>Привет мир!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:define_resources</span>&gt;</span></pre></div></div><p>In the above example, there is a widget, which uses a string HELLO_STRING from resources. Note, that template takes that string\nfrom widget by it&#39;s controller name (&quot;$widget&quot; is name of <a href=\"/www/doc.html#class=Lava.widget.Standard\">Lava.widget.Standard</a> class, see <a href=\"/www/doc.html#class=Lava.widget.Standard;member=name\">Standard#name</a>).\nIt&#39;s recommended to put resources for each locale into separate file.</p>\n<p>Widget then may be used as usual:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">extends</span>=<span class=\"hljs-value\">\"HelloWidget\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"HelloWidget\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>It will display a widget with string, chosen by current <a href=\"/www/doc.html#object=Lava.schema;member=LOCALE\">schema#LOCALE</a>. </p>\n<p>Tip: you can set current locale before call to <code>Lava.init()</code> or <code>Lava.bootstrap()</code>.</p>\n<h1 id=\"resource-paths-and-inheritance\">Resource paths and inheritance</h1>\n<p>There are four types of resource values: </p>\n<ul>\n<li>translatable string, </li>\n<li>translatable plural string</li>\n<li>container properties (including styles and classes)</li>\n<li>and &quot;options&quot; - any JavaScript object, array or value (anything, that can be serialized)</li>\n</ul>\n<p>You can set resources to an inline widget with x:resources directive and &lt;resources&gt; tag:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">extends</span>=<span class=\"hljs-value\">\"HelloWidget\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>Hi all!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"ru\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>Здравствуйте!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"HelloWidget\"</span>,\n    resources: {\n        en: {\n            HELLO_STRING: {\n                type: <span class=\"hljs-string\">\"string\"</span>,\n                value: <span class=\"hljs-string\">\"Hi all!\"</span>\n            }\n        },\n        ru: {\n            HELLO_STRING: {\n                type: <span class=\"hljs-string\">\"string\"</span>,\n                value: <span class=\"hljs-string\">\"Здравствуйте!\"</span>\n            }\n        }\n    },\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>Resource values can have paths:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"hello_widget.HELLO_STRING\"</span>&gt;</span>Hi all!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    resources: {\n        en: {\n            hello_widget: {\n                type: <span class=\"hljs-string\">\"component\"</span>,\n                value: {\n                    HELLO_STRING: {\n                        type: <span class=\"hljs-string\">\"string\"</span>,\n                        value: <span class=\"hljs-string\">\"Hi all!\"</span>\n                    }\n                }\n            }\n        }\n    },\n    real_class: <span class=\"hljs-string\">\"Standard\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>Notice: widget from previous example does not extend HelloWidget anymore.</p>\n<p>Path segments should be named lower-case, while resource value names should be upper-case. \nIn the above example, a &quot;component&quot; was created: components contain resource values and another components.\nRoot resource object can also be treated as component.</p>\n<p>Components can be assigned to widgets with <code>resource_id</code> attribute. Resources from <code>resource_id</code> have priority over\nwidget&#39;s own resources. The example below defines <code>hello_widget.HELLO_STRING</code> in the root widget, \nand assigns <code>hello_widget</code> resource to HelloWidget:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">main_template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">extends</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">resource_id</span>=<span class=\"hljs-value\">\"$widget.hello_widget\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">main_template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"hello_widget.HELLO_STRING\"</span>&gt;</span>Hi all!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"ru\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"hello_widget.HELLO_STRING\"</span>&gt;</span>Здравствуйте!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    template: [\n        <span class=\"hljs-string\">\"\\r\\n\\t\\t\"</span>,\n        {\n            <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"HelloWidget\"</span>,\n            <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n            extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n            resource_id: {\n                locator_type: <span class=\"hljs-string\">\"Name\"</span>,\n                locator: <span class=\"hljs-string\">\"widget\"</span>,\n                name: <span class=\"hljs-string\">\"hello_widget\"</span>\n            },\n            type: <span class=\"hljs-string\">\"widget\"</span>\n        },\n        <span class=\"hljs-string\">\"\\r\\n\\t\"</span>\n    ],\n    resources: {\n        en: {\n            hello_widget: {\n                type: <span class=\"hljs-string\">\"component\"</span>,\n                value: {\n                    HELLO_STRING: {\n                        type: <span class=\"hljs-string\">\"string\"</span>,\n                        value: <span class=\"hljs-string\">\"Hi all!\"</span>\n                    }\n                }\n            }\n        },\n        ru: {\n            hello_widget: {\n                type: <span class=\"hljs-string\">\"component\"</span>,\n                value: {\n                    HELLO_STRING: {\n                        type: <span class=\"hljs-string\">\"string\"</span>,\n                        value: <span class=\"hljs-string\">\"Здравствуйте!\"</span>\n                    }\n                }\n            }\n        }\n    },\n    real_class: <span class=\"hljs-string\">\"Standard\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>See <a href=\"/www/doc.html#class=Lava.widget.Standard;member=_initResources\">Standard#_initResources</a>: in constructor HelloWidget finds the resource owner,\nand calls <a href=\"/www/doc.html#class=Lava.widget.Standard;member=getResource\">Standard#getResource</a> from it.</p>\n<h2 id=\"real-life-example\">Real-life example</h2>\n<p>Accordion uses another widget - CollapsiblePanel, which inherits resources from it&#39;s owner.\nSee the sources of Accordion widget from <code>templates/</code> folder of Lava repository.</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">collapsible-panel</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:roles</span>=<span class=\"hljs-value\">\"$accordion.panel\"</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:resource_id</span>=<span class=\"hljs-value\">\"$accordion.panel\"</span>&gt;</span></pre></div></div><p>Accordion adds a class to that panel in it&#39;s own resources:</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-comment\">&lt;!-- Accordion's resources --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"default\"</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- This container is part of accordion's own template --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">container</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"ACCORDION_CONTAINER\"</span> <span class=\"hljs-attribute\">static_classes</span>=<span class=\"hljs-value\">\"panel-group\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">container</span>&gt;</span>\n    <span class=\"hljs-comment\">&lt;!-- This component is for the CollapsiblePanel widget --&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">container</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"panel.COLLAPSIBLE_PANEL_CONTAINER\"</span> <span class=\"hljs-attribute\">add_classes</span>=<span class=\"hljs-value\">\"panel-collapse\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">container</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span></pre></div></div><p>Accordion created the &quot;panel&quot; component in it&#39;s resources, and connected it to the CollapsiblePanel widget using \n<code>x:resource_id</code> attribute. <span class=\"api-string\">&quot;default&quot;</span> locale will be discussed later.</p>\n<p>Tip: type <code>Lava.widgets.Accordion</code> in your browser&#39;s console to see the parse result.\nOr you can even type <code>Lava.Serializer.serialize(Lava.widgets.Accordion)</code> to see it as text.</p>\n<p>When you use accordion - you can assign resources to the panel inside it without rewriting it&#39;s templates:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">accordion</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">container</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"panel.COLLAPSIBLE_PANEL_CONTAINER\"</span> <span class=\"hljs-attribute\">add_classes</span>=<span class=\"hljs-value\">\"panel-info\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">container</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:resources</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">panels</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">panel</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">title</span>&gt;</span>Test panel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">title</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">content</span>&gt;</span>Test content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">content</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">panel</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">panels</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">accordion</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    type: <span class=\"hljs-string\">\"widget\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"Accordion\"</span>,\n    resources: {\n        en: {\n            panel: {\n                type: <span class=\"hljs-string\">\"component\"</span>,\n                value: {\n                    COLLAPSIBLE_PANEL_CONTAINER: {\n                        type: <span class=\"hljs-string\">\"container_stack\"</span>,\n                        value: [{\n                            name: <span class=\"hljs-string\">\"add_classes\"</span>,\n                            value: [<span class=\"hljs-string\">\"panel-info\"</span>]\n                        }]\n                    }\n                }\n            }\n        }\n    },\n    storage: {\n        panels: [{\n            title: [<span class=\"hljs-string\">\"Test panel\"</span>],\n            content: [<span class=\"hljs-string\">\"Test content\"</span>]\n        }]\n    }\n}]</pre></div></div><p>Or you can assign them using <code>resource_id</code>:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">main_template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">accordion</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:resource_id</span>=<span class=\"hljs-value\">\"$widget.my_accordion\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">panels</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">panel</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">title</span>&gt;</span>Test panel<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">title</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">content</span>&gt;</span>Test content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">content</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">panel</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">panels</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">accordion</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">main_template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">container</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"my_accordion.panel.COLLAPSIBLE_PANEL_CONTAINER\"</span> <span class=\"hljs-attribute\">add_classes</span>=<span class=\"hljs-value\">\"panel-info\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">container</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    template: [\n        <span class=\"hljs-string\">\"\\r\\n\\t\\t\"</span>,\n        {\n            type: <span class=\"hljs-string\">\"widget\"</span>,\n            <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n            extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n            <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"Accordion\"</span>,\n            storage: {\n                panels: [{\n                    title: [<span class=\"hljs-string\">\"Test panel\"</span>],\n                    content: [<span class=\"hljs-string\">\"Test content\"</span>]\n                }]\n            },\n            resource_id: {\n                locator_type: <span class=\"hljs-string\">\"Name\"</span>,\n                locator: <span class=\"hljs-string\">\"widget\"</span>,\n                name: <span class=\"hljs-string\">\"my_accordion\"</span>\n            }\n        },\n        <span class=\"hljs-string\">\"\\r\\n\\t\"</span>\n    ],\n    resources: {\n        en: {\n            my_accordion: {\n                type: <span class=\"hljs-string\">\"component\"</span>,\n                value: {\n                    panel: {\n                        type: <span class=\"hljs-string\">\"component\"</span>,\n                        value: {\n                            COLLAPSIBLE_PANEL_CONTAINER: {\n                                type: <span class=\"hljs-string\">\"container_stack\"</span>,\n                                value: [{\n                                    name: <span class=\"hljs-string\">\"add_classes\"</span>,\n                                    value: [<span class=\"hljs-string\">\"panel-info\"</span>]\n                                }]\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    real_class: <span class=\"hljs-string\">\"Standard\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>With respect to <code>resource_id</code> attribute, Accordion receives <code>my_accordion</code> resource component from it&#39;s parent widget.\nPanel inside accordion receives <code>my_accordion.panel</code> component, and container inside the panel uses \n<code>COLLAPSIBLE_PANEL_CONTAINER</code> resource value. As long as widgets are connected with <code>resource_id</code> you can assign\nresources to them. In this example, a new class was added to container inside accordion&#39;s panel: <code>add_classes=&quot;panel-info&quot;</code>.</p>\n<p>Resource parent does not necessarily need to define a resource component for child. \nResources will be applied only when they are present.</p>\n<h2 id=\"static-tags-and-values\">Static tags and values</h2>\n<p>As you know, tags without control attributes are serialized back to strings in <a href=\"/www/doc.html#object=Lava.parsers.Common;member=compileTemplate\">Common#compileTemplate</a>.\nThere is special tag type, which is also serialized to strings, but it&#39;s done at run time: <code>x:type=&quot;static&quot;</code>.\nThis allows the container to use resources:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">main_template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">div</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:type</span>=<span class=\"hljs-value\">\"static\"</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:resource_id</span>=<span class=\"hljs-value\">\"$widget.MAIN_CONTAINER\"</span>&gt;</span>\n      Test\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">main_template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">container</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"MAIN_CONTAINER\"</span> <span class=\"hljs-attribute\">add_classes</span>=<span class=\"hljs-value\">\"test-class\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">container</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    template: [\n        <span class=\"hljs-string\">\"\\r\\n\\t\\t\"</span>,\n        {\n            type: <span class=\"hljs-string\">\"static_tag\"</span>,\n            resource_id: {\n                locator_type: <span class=\"hljs-string\">\"Name\"</span>,\n                locator: <span class=\"hljs-string\">\"widget\"</span>,\n                name: <span class=\"hljs-string\">\"MAIN_CONTAINER\"</span>\n            },\n            name: <span class=\"hljs-string\">\"div\"</span>,\n            template: [<span class=\"hljs-string\">\"\\r\\n\\t\\t\\tTest\\r\\n\\t\\t\"</span>]\n        },\n        <span class=\"hljs-string\">\"\\r\\n\\t\"</span>\n    ],\n    resources: {\n        en: {\n            MAIN_CONTAINER: {\n                type: <span class=\"hljs-string\">\"container_stack\"</span>,\n                value: [{\n                    name: <span class=\"hljs-string\">\"add_classes\"</span>,\n                    value: [<span class=\"hljs-string\">\"test-class\"</span>]\n                }]\n            }\n        }\n    },\n    real_class: <span class=\"hljs-string\">\"Standard\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>Static containers can also have properties, styles and classes, and they all can be overwritten \nby &lt;container&gt; resource.</p>\n<p>How it works: tag is compiled into a block of type <a href=\"/www/doc.html#object=Support;member=_cStaticTag\">_cStaticTag</a>. When <a href=\"/www/doc.html#class=Lava.system.Template\">Lava.system.Template</a> creates\nthis kind of block - it retrieves it&#39;s resources, merges them with tag&#39;s own properties, and renders this tag as a string.</p>\n<p>The same way functions x:static_value directive - it&#39;s compiled into <a href=\"/www/doc.html#object=Support;member=_cStaticValue\">_cStaticValue</a>, \nwhich is replaced with a value from resource at run time.</p>\n<h2 id=\"locales-and-resource-priority\">Locales and resource priority</h2>\n<p>Locale is collection of language and region-dependent data and methods, which are stored in <code>Lava.locales</code> namespace.\nCurrent locale is selected by <a href=\"/www/doc.html#object=Lava.schema;member=LOCALE\">schema#LOCALE</a> switch. In Lava framework switching locales can be done \nwithout page reload, but you will need to destroy all widgets and create them again.</p>\n<p>Resources are also tied to locale. This allows you to setup properties, styles, and any arbitrary data \n(with &lt;options&gt; resource type) that will change, depending on locale.</p>\n<p>Resources are merged: least priority have inline template resources, like container properties.\nEvery resources, received with <code>resource_id</code> have priority over own resources of consumer \n(be it widget, container, static container or static value).</p>\n<p>There is a special locale, called <span class=\"api-string\">&quot;default&quot;</span>, which is merged before any other locale.\nCommon usage for it: provide some common locale-independent styles for containers.</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:define</span> <span class=\"hljs-attribute\">title</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">main_template</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:static_value</span> <span class=\"hljs-attribute\">resource_id</span>=<span class=\"hljs-value\">\"$widget.HELLO_STRING\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:static_value</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">main_template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"default\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>I'm a teapot!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>Hello world!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">for</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"ru\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>Привет мир!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:define</span>&gt;</span></pre></div></div><p>In the above example, string <span class=\"api-string\">&quot;I&#39;m a teapot!&quot;</span> from <span class=\"api-string\">&quot;default&quot;</span> locale will be shown \nif locale is not &quot;en&quot; or &quot;ru&quot;.</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">extends</span>=<span class=\"hljs-value\">\"HelloWidget\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"default\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>I'm a big teapot!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"HelloWidget\"</span>,\n    resources: {\n        <span class=\"hljs-string\">\"default\"</span>: {\n            HELLO_STRING: {\n                type: <span class=\"hljs-string\">\"string\"</span>,\n                value: <span class=\"hljs-string\">\"I'm a big teapot!\"</span>\n            }\n        }\n    },\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>In the above example, string &quot;I&#39;m a big teapot!&quot; will override every <code>HELLO_STRING</code>, which is defined in &quot;HelloWidget&quot;,\ncause inline data overrides data from parent widgets.</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">main_template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">extends</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">resource_id</span>=<span class=\"hljs-value\">\"$widget.hello_widget\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"HELLO_STRING\"</span>&gt;</span>Hi all!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">main_template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"default\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"hello_widget.HELLO_STRING\"</span>&gt;</span>I'm a sunflower!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"en\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">string</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"hello_widget.HELLO_STRING\"</span>&gt;</span>I'm a teapot!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">string</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    template: [\n        <span class=\"hljs-string\">\"\\r\\n\\t\\t\"</span>,\n        {\n            <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"HelloWidget\"</span>,\n            resources: {\n                en: {\n                    HELLO_STRING: {\n                        type: <span class=\"hljs-string\">\"string\"</span>,\n                        value: <span class=\"hljs-string\">\"Hi all!\"</span>\n                    }\n                }\n            },\n            <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n            extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n            resource_id: {\n                locator_type: <span class=\"hljs-string\">\"Name\"</span>,\n                locator: <span class=\"hljs-string\">\"widget\"</span>,\n                name: <span class=\"hljs-string\">\"hello_widget\"</span>\n            },\n            type: <span class=\"hljs-string\">\"widget\"</span>\n        },\n        <span class=\"hljs-string\">\"\\r\\n\\t\"</span>\n    ],\n    resources: {\n        <span class=\"hljs-string\">\"default\"</span>: {\n            hello_widget: {\n                type: <span class=\"hljs-string\">\"component\"</span>,\n                value: {\n                    HELLO_STRING: {\n                        type: <span class=\"hljs-string\">\"string\"</span>,\n                        value: <span class=\"hljs-string\">\"I'm a sunflower!\"</span>\n                    }\n                }\n            }\n        },\n        en: {\n            hello_widget: {\n                type: <span class=\"hljs-string\">\"component\"</span>,\n                value: {\n                    HELLO_STRING: {\n                        type: <span class=\"hljs-string\">\"string\"</span>,\n                        value: <span class=\"hljs-string\">\"I'm a teapot!\"</span>\n                    }\n                }\n            }\n        }\n    },\n    real_class: <span class=\"hljs-string\">\"Standard\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>In this example, string <span class=\"api-string\">&quot;Hi all!&quot;</span> will be overridden by <span class=\"api-string\">&quot;I&#39;m a sunflower!&quot;</span>, \ncause resources, received via <code>resource_id</code> overwrite widget&#39;s own resources, \nand &quot;default&quot; locale overwrites everything below it. And <span class=\"api-string\">I&#39;m a teapot!</span> will\noverwrite <span class=\"api-string\">I&#39;m a sunflower!</span>, but only for English locale.</p>\n<h2 id=\"see-also\">See also</h2>\n<p><a href=\"/www/doc.html#reference=ResourcesDefinition\">Resources definition</a> - reference on how to define resources<br/>\n<a href=\"/www/doc.html#object=Lava.extenders;member=_extendResources\">extenders#_extendResources</a> - see the source to get better understanding of &quot;default&quot; locale<br/>\n<a href=\"/www/doc.html#class=Lava.widget.Standard;member=_initResources\">Standard#_initResources</a><br/>\n<a href=\"/www/doc.html#class=Lava.widget.Standard;member=getResource\">Standard#getResource</a><br/>\n<a href=\"/www/doc.html#class=Lava.system.Template;member=_createStaticValue\">Template#_createStaticValue</a><br/>\n<a href=\"/www/doc.html#class=Lava.system.Template;member=_createStaticTag\">Template#_createStaticTag</a><br/>\n<a href=\"/www/doc.html#class=Lava.view.container.Element;member=init\">Element#init</a><br/>\n<a href=\"/www/doc.html#reference=Directives.define_resources\">define_resources</a><br/>\n<a href=\"/www/doc.html#object=Lava.resources\">Lava.resources</a></p>\n<h2 id=\"appendix-a-resource_id-attribute\">Appendix A - resource_id attribute</h2>\n<p>Format of the <code>resource_id</code> attribute:</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n</pre><pre class=\"lava-code-content hljs text\">&lt;parent_locator&gt;.&lt;resource_name&gt;</pre></div></div><p>Parent may be referenced either by &quot;$widget_name&quot;, &quot;@widget_label&quot; or &quot;#widget_id&quot;.</p>\n<p>Attribute may be applied:</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\n12\r\n13\r\n14\r\n15\r\n16\r\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-comment\">&lt;!-- On widgets (standard syntax) --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">resource_id</span>=<span class=\"hljs-value\">\"...\"</span>&gt;</span> ... <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- On widgets (sugar) --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">tabs</span> <span class=\"hljs-attribute\">resource_id</span>=<span class=\"hljs-value\">\"...\"</span>&gt;</span> ... <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">tabs</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- On widgets (control attribute syntax) --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">div</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:widget</span>=<span class=\"hljs-value\">\"DropDown\"</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:resource_id</span>=<span class=\"hljs-value\">\"...\"</span>&gt;</span> ... <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">div</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- On containers (as wrappers) --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">div</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:type</span>=<span class=\"hljs-value\">\"container\"</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:resource_id</span>=<span class=\"hljs-value\">\"...\"</span>&gt;</span> ... <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">div</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- On containers (inline view) --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">div</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:type</span>=<span class=\"hljs-value\">\"view\"</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:resource_id</span>=<span class=\"hljs-value\">\"...\"</span>&gt;</span> ... <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">div</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- On static tags --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">div</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:type</span>=<span class=\"hljs-value\">\"static\"</span> <span class=\"lava-control-prefix\">x</span><span class=\"hljs-attribute\">:resource_id</span>=<span class=\"hljs-value\">\"...\"</span>&gt;</span> ... <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">div</span>&gt;</span>\n\n<span class=\"hljs-comment\">&lt;!-- On x:static_value directive --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:static_value</span> <span class=\"hljs-attribute\">resource_id</span>=<span class=\"hljs-value\">\"...\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:static_value</span>&gt;</span></pre></div></div><p>When the attribute is applied to widgets - it belongs to the widget. For the rest - in corresponding config\nof container, static tag or directive. Note: for <code>x:type=&quot;view&quot;</code> - it&#39;s stored in config of container for that view.</p>\n<h2 id=\"appendix-b-container-resource-format\">Appendix B - container resource format</h2>\n<p>Container resource is stored as array of operations, like &quot;add_class&quot;, &quot;remove_style&quot;, &quot;replace_properties&quot; and so on.\nThere are totally 9 possible operations (three operations of each kind: replace, add, delete).\nInternally, this form of container resource is called &quot;container_stack&quot;.</p>\n<p>This raw format needs to be merged into &quot;container&quot; resource, which is understandable by Template and Element containers.\nBut this can be done only when widget knows all applied operations.</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:define</span> <span class=\"hljs-attribute\">title</span>=<span class=\"hljs-value\">\"HelloWidget\"</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">main_template</span>&gt;</span>\n        ...\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">main_template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">resources</span> <span class=\"hljs-attribute\">locale</span>=<span class=\"hljs-value\">\"defaulr\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">container</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"MAIN_HELLO_CONTAINER\"</span> <span class=\"hljs-attribute\">add_classes</span>=<span class=\"hljs-value\">\"test\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">container</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">container</span> <span class=\"hljs-attribute\">path</span>=<span class=\"hljs-value\">\"panel.MAIN_CONTAINER\"</span> <span class=\"hljs-attribute\">add_classes</span>=<span class=\"hljs-value\">\"test\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">container</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">resources</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:define</span>&gt;</span></pre></div></div><p>In this example, <code>MAIN_HELLO_CONTAINER</code> will be merged as soon as &quot;HelloWidget&quot; is constructed. \nBut <code>panel.MAIN_CONTAINER</code> will be merged by the panel, not by &quot;HelloWidget&quot;.</p>\n<p>In the process of merging - original resources are not changed, instead each widget stores it&#39;s own copy of merge results.\nSee <a href=\"/www/doc.html#class=Lava.widget.Standard;member=_initResources\">Standard#_initResources</a> and <a href=\"/www/doc.html#object=Lava.resources;member=mergeRootContainerStacks\">resources#mergeRootContainerStacks</a>.</p>\n"],
	container: {
		type: "Element",
		tag_name: "div"
	}
}