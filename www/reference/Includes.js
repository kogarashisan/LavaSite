{
	type: "widget",
	is_extended: true,
	template: ["<h1 id=\"includes\">Includes</h1>\n<p>Include is a named template from widget.</p>\n<p>You should not treat include as a function call, but rather as &quot;copy-paste&quot; of another template in the place of include.\nIn other frameworks, where templates are compiled to functions, you can pass parameters to includes.\nHere include is using the environment, where it was created.</p>\n<p>Example include definition and usage:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">controller</span>=<span class=\"hljs-value\">\"Standard\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">template</span>&gt;</span>\n    {&gt; $widget.header}\n    This is content\n    {&gt; $widget.footer}\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">include</span> <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-value\">\"header\"</span>&gt;</span>\n    This is header\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">include</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">include</span> <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-value\">\"footer\"</span>&gt;</span>\n    This is footer\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">include</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    template: [\n        <span class=\"hljs-string\">\"\\r\\n\\t\\t\"</span>,\n        {\n            locator_type: <span class=\"hljs-string\">\"Name\"</span>,\n            locator: <span class=\"hljs-string\">\"widget\"</span>,\n            name: <span class=\"hljs-string\">\"header\"</span>,\n            type: <span class=\"hljs-string\">\"include\"</span>\n        },\n        <span class=\"hljs-string\">\"\\r\\n\\t\\tThis is content\\r\\n\\t\\t\"</span>,\n        {\n            locator_type: <span class=\"hljs-string\">\"Name\"</span>,\n            locator: <span class=\"hljs-string\">\"widget\"</span>,\n            name: <span class=\"hljs-string\">\"footer\"</span>,\n            type: <span class=\"hljs-string\">\"include\"</span>\n        },\n        <span class=\"hljs-string\">\"\\r\\n\\t\"</span>\n    ],\n    includes: {\n        header: [<span class=\"hljs-string\">\"\\r\\n\\t\\tThis is header\\r\\n\\t\"</span>],\n        footer: [<span class=\"hljs-string\">\"\\r\\n\\t\\tThis is footer\\r\\n\\t\"</span>]\n    },\n    real_class: <span class=\"hljs-string\">\"Standard\"</span>,\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>Syntax for using includes:</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n</pre><pre class=\"lava-code-content hljs text\">{> target}</pre></div></div><p>Include target is parsed by <a href=\"/www/doc.html#object=Lava.parsers.Common;member=parseTargets\">Common#parseTargets</a> and has same format as event or role target.\nIncludes are processed in <a href=\"/www/doc.html#class=Lava.system.Template\">Lava.system.Template</a> in constructor.</p>\n<p>Like events, includes can be bubbling. Bubbling include is served by the first widget that has it.\nYou should prefer targeted includes over bubbling.</p>\n<h2 id=\"include-arguments\">Include arguments</h2>\n<p>You can define a custom method for serving an include - this means that you can dynamically return include templates,\ndepending on situation. You define <code>_include_handlers</code>, just like role or event handlers. \nHandler receives arguments from template:</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Controller</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n</pre><pre class=\"lava-code-content hljs javascript\">Lava.define(\n<span class=\"hljs-string\">'Lava.widget.MyWidget'</span>,\n{\n    Extends: <span class=\"hljs-string\">'Lava.widget.Standard'</span>,\n    name: <span class=\"hljs-string\">\"my_widget\"</span>,\n\n    _include_handlers: {\n        my_include: <span class=\"hljs-string\">'_handleMyInclude'</span>\n    },\n\n    _handleMyInclude: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(template_arguments)</span> {</span>\n\n        <span class=\"hljs-keyword\">var</span> item = template_arguments[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">return</span> (item.type == <span class=\"hljs-string\">'number'</span>) ? [<span class=\"hljs-string\">'item is number'</span>] : [<span class=\"hljs-string\">'item is not number'</span>];\n\n    }\n});</pre></div><div class=\"api-code-header api-code-header-blue\">Template</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n</pre><pre class=\"lava-code-content hljs xml\">{&gt; $my_widget.my_include(item)}</pre></div></div><p>You should not treat include arguments as something that will be available to template inside the include.\nInclude arguments are passed to class method, that serves the include.</p>\n<p>If widget has custom handler for &quot;my_include&quot; - then it has priority over include from widget config, \nsee <a href=\"/www/doc.html#class=Lava.widget.Standard;member=getInclude\">Standard#getInclude</a> source for better understanding.</p>\n<p>Real-life usage example: see the <a href=\"/www/doc.html#class=Lava.widget.Table\">Lava.widget.Table</a> widget controller - it serves different cell templates \nfor each type of table column.</p>\n<h2 id=\"include-inheritance\">Include inheritance</h2>\n<p>When include is overwritten in inherited widget - parent include is renamed, and you can still access it.\nThis happens in the process of config extension.</p>\n<div class=\"lava-code-container lava-code-container-plain\"><div class=\"api-code-header api-code-header-blue\">Template source</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n</pre><pre class=\"lava-code-content hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:widget</span> <span class=\"hljs-attribute\">extends</span>=<span class=\"hljs-value\">\"Tree\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">include</span> <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-value\">\"node_body_content\"</span>&gt;</span>\n    {&gt; $tree.Tree$node_body_content}\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">checkbox</span> <span class=\"hljs-attribute\">style</span>=<span class=\"hljs-value\">\"float: right\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:assign</span> <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-value\">\"is_checked\"</span>&gt;</span>node.is_checked<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:assign</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-title\">x:assign</span> <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-value\">\"is_indeterminate\"</span>&gt;</span>node.is_indeterminate<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:assign</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">checkbox</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">include</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-title\">x:widget</span>&gt;</span></pre></div><div class=\"api-code-header api-code-header-blue\">Parse result</div>\n<div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n</pre><pre class=\"lava-code-content hljs javascript\">[{\n    <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"Tree\"</span>,\n    includes: {\n        node_body_content: [\n            <span class=\"hljs-string\">\"\\r\\n\\t\\t\"</span>,\n            {\n                locator_type: <span class=\"hljs-string\">\"Name\"</span>,\n                locator: <span class=\"hljs-string\">\"tree\"</span>,\n                name: <span class=\"hljs-string\">\"Tree$node_body_content\"</span>,\n                type: <span class=\"hljs-string\">\"include\"</span>\n            },\n            <span class=\"hljs-string\">\"\\r\\n\\t\\t\"</span>,\n            {\n                type: <span class=\"hljs-string\">\"widget\"</span>,\n                <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n                extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n                <span class=\"hljs-string\">\"extends\"</span>: <span class=\"hljs-string\">\"CheckBox\"</span>,\n                assigns: {\n                    is_checked: {\n                        evaluator: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span> {</span>\n                            <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-keyword\">this</span>._binds[<span class=\"hljs-number\">0</span>].getValue());\n                        },\n                        flags: {isScopeEval: <span class=\"hljs-literal\">true</span>},\n                        binds: [{\n                            property_name: <span class=\"hljs-string\">\"node\"</span>,\n                            tail: [<span class=\"hljs-string\">\"is_checked\"</span>]\n                        }]\n                    },\n                    is_indeterminate: {\n                        evaluator: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span> {</span>\n                            <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-keyword\">this</span>._binds[<span class=\"hljs-number\">0</span>].getValue());\n                        },\n                        flags: {isScopeEval: <span class=\"hljs-literal\">true</span>},\n                        binds: [{\n                            property_name: <span class=\"hljs-string\">\"node\"</span>,\n                            tail: [<span class=\"hljs-string\">\"is_indeterminate\"</span>]\n                        }]\n                    }\n                },\n                resources: {\n                    <span class=\"hljs-string\">\"default\"</span>: {\n                        CHECKBOX_ELEMENT: {\n                            type: <span class=\"hljs-string\">\"container_stack\"</span>,\n                            value: [{\n                                name: <span class=\"hljs-string\">\"add_styles\"</span>,\n                                value: {<span class=\"hljs-string\">\"float\"</span>: <span class=\"hljs-string\">\"right\"</span>}\n                            }]\n                        }\n                    }\n                }\n            },\n            <span class=\"hljs-string\">\"\\r\\n\\t\"</span>\n        ]\n    },\n    <span class=\"hljs-string\">\"class\"</span>: <span class=\"hljs-string\">\"Lava.WidgetConfigExtensionGateway\"</span>,\n    extender_type: <span class=\"hljs-string\">\"Standard\"</span>,\n    type: <span class=\"hljs-string\">\"widget\"</span>\n}]</pre></div></div><p>When parent includes are renamed - name of the parent widget and dollar-sign are added to them, so in this case\nparent&#39;s <span class=\"api-string\">&quot;node_body_content&quot;</span> include will be renamed to <span class=\"api-string\">&quot;Tree$node_body_content&quot;</span>.</p>\n<p>Renamed parent includes are added to <a href=\"/www/doc.html#object=Support;member=_cWidget.includes\">_cWidget#includes</a> of inherited widget, \nso in controller you can access them just like widget&#39;s own:</p>\n<div class=\"lava-code-container\"><div class=\"lava-code\"><pre class=\"lava-code-line-numbers\">&nbsp;&nbsp;1\r\n</pre><pre class=\"lava-code-content hljs javascript\"><span class=\"hljs-keyword\">var</span> parent_include = <span class=\"hljs-keyword\">this</span>._config[<span class=\"hljs-string\">\"Tree$node_body_content\"</span>];</pre></div></div>"],
	container: {
		type: "Element",
		tag_name: "div"
	}
}