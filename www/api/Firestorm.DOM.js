var page_json = {"description":"<p>All DOM manipulation methods are implemented in two ways: there is version that works with ranges (with DOM Range object), \nand version that works directly with DOM nodes (using <code>nextSibling</code>, <code>insertBefore</code> and other node properties and methods). \nThis behaviour is controlled by <a href=\"/www/doc/object/Firestorm.schema.html#member=dom.PREFER_RANGE_API\">schema#dom.PREFER_RANGE_API</a> switch.</p>\n<p>Ranges are thought to be slower than direct nodes manipulation, so by default framework does not use ranges.</p>\n","member_chain":[{"descriptors":[{"name":"_moves_whitespace","is_private":true,"type":"member","default_value":"<span class=\"api-keyword\">false</span>","description":"<p>Workaround for browser bugs in IE. Equals to value of <code>MOVES_WHITESPACE_BEFORE_SCRIPT</code> capability</p>\n"},{"name":"_needs_shy","is_private":true,"type":"member","default_value":"<span class=\"api-keyword\">false</span>","description":"<p>Workaround for browser bugs in IE. Equals to value of <code>STRIPS_INNER_HTML_SCRIPT_AND_STYLE_TAGS</code> capability</p>\n"},{"name":"_wrap_map","is_private":true,"type":"member","default_value":"<span class=\"api-highlight-gray\">{ ... }</span>","description":"<p>When turning HTML into nodes - it must be inserted into appropriate tags to stay valid</p>\n"}]}],"method_chain":[{"descriptors":[{"name":"_createInnerRange","is_private":true,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","returns":{"type_names":["Range","TextRange"]},"description":"<p>Create a Range object, with limits between the given elements</p>\n"},{"name":"_createOuterRange","is_private":true,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","returns":{"type_names":["Range","TextRange"]},"description":"<p>Create a Range object, which includes the given elements</p>\n"},{"name":"_firstNodeFor","is_private":true,"type":"function","params":[{"name":"parentNode","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"parentNode, html","description":"<p>Given a parent node and some HTML, generate a set of nodes. Return the first\nnode, which will allow us to traverse the rest using nextSibling.</p>\n<p>In cases of certain elements like tables and lists we cannot just assign innerHTML and get the nodes,\ncause innerHTML is either readonly on them in IE, or it would destroy some of the content</p>\n"},{"name":"_insertHTMLBefore","is_private":true,"type":"function","params":[{"name":"parent_node","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]},{"name":"insert_before","type_names":["HTMLElement"]}],"param_names_string":"parent_node, html, insert_before","description":"<p>Turn HTML into nodes with respect to the parent node and sequentially insert them before <code>insert_before</code> element</p>\n"},{"name":"_moveRegionBefore","is_private":true,"type":"function","params":[{"name":"parent","type_names":["HTMLElement"]},{"name":"target","type_names":["HTMLElement"]},{"name":"node","type_names":["HTMLElement"]},{"name":"region_end_element","type_names":["HTMLElement"]}],"param_names_string":"parent, target, node, region_end_element","description":"<p>Perform movement of a range of nodes</p>\n"},{"name":"_setInnerHTML","is_private":true,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Set the element&#39;s innerHTML, taking into account various browser bugs</p>\n"},{"name":"clearInnerRange","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","description":"<p>Remove all HTML nodes between the given elements</p>\n"},{"name":"clearInnerRange_Nodes","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","description":"<p>Remove everything between two tags</p>\n"},{"name":"clearInnerRange_Range","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","description":"<p>Version of clearInnerRange, which works with Range API</p>\n"},{"name":"clearOuterRange","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","description":"<p>Remove all HTML nodes between the given elements and elements themselves</p>\n"},{"name":"clearOuterRange_Nodes","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","description":"<p>Version of clearOuterRange, which manipulates HTML nodes</p>\n"},{"name":"clearOuterRange_Range","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]}],"param_names_string":"start_element, end_element","description":"<p>Version of clearOuterRange, which works with Range API</p>\n"},{"name":"init","is_private":false,"type":"function","description":"<p>Init the object: choose appropriate methods for DOM manipulation, depending on browser capabilities</p>\n"},{"name":"insertHTML","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]},{"name":"position","is_optional":true,"type_names":["<a href=\"/www/doc/object/Support.html#member=_eInsertPosition\">_eInsertPosition</a>"]}],"param_names_string":"element, html, position","description":"<p>Turn HTML into nodes and insert them relatively to the given element</p>\n"},{"name":"insertHTMLAfter","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Turn given HTML into DOM nodes and insert them after the given element</p>\n"},{"name":"insertHTMLAfter_Nodes","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLAfter which works with nodes</p>\n"},{"name":"insertHTMLAfter_Range","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLAfter, which works with Range API</p>\n"},{"name":"insertHTMLBefore","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Turn given HTML into DOM nodes and insert them before the given element</p>\n"},{"name":"insertHTMLBefore_Nodes","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLBefore which works with nodes</p>\n"},{"name":"insertHTMLBefore_Range","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLBefore, which works with Range API</p>\n"},{"name":"insertHTMLBottom","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Turn given HTML into DOM nodes and insert them inside the given element, at the bottom</p>\n"},{"name":"insertHTMLBottom_Nodes","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLBottom which works with nodes</p>\n"},{"name":"insertHTMLBottom_Range","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLBottom, which works with Range API</p>\n"},{"name":"insertHTMLTop","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Turn given HTML into DOM nodes and insert them inside the given element, at the top of it</p>\n"},{"name":"insertHTMLTop_Nodes","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLTop which works with nodes</p>\n"},{"name":"insertHTMLTop_Range","is_private":false,"type":"function","params":[{"name":"element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"element, html","description":"<p>Version of insertHTMLTop, which works with Range API</p>\n"},{"name":"moveRegionAfter","is_private":false,"type":"function","params":[{"name":"target","type_names":["HTMLElement"]},{"name":"region_start_element","type_names":["HTMLElement"]},{"name":"region_end_element","type_names":["HTMLElement"]}],"param_names_string":"target, region_start_element, region_end_element","description":"<p>Move <code>region_start_element</code>, <code>region_end_element</code> and all elements between them after <code>target</code></p>\n"},{"name":"moveRegionAfter_Nodes","is_private":false,"type":"function","params":[{"name":"target","type_names":["HTMLElement"]},{"name":"region_start_element","type_names":["HTMLElement"]},{"name":"region_end_element","type_names":["HTMLElement"]}],"param_names_string":"target, region_start_element, region_end_element","description":"<p>Version of <code>moveRegionAfter</code>, which works with DOM nodes.</p>\n"},{"name":"moveRegionAfter_Range","is_private":false,"type":"function","params":[{"name":"target","type_names":["HTMLElement"]},{"name":"region_start_element","type_names":["HTMLElement"]},{"name":"region_end_element","type_names":["HTMLElement"]}],"param_names_string":"target, region_start_element, region_end_element","description":"<p>Version of <code>moveRegionAfter</code>, which works with ranges</p>\n"},{"name":"moveRegionBefore","is_private":false,"type":"function","params":[{"name":"target","type_names":["HTMLElement"]},{"name":"region_start_element","type_names":["HTMLElement"]},{"name":"region_end_element","type_names":["HTMLElement"]}],"param_names_string":"target, region_start_element, region_end_element","description":"<p>Move <code>region_start_element</code>, <code>region_end_element</code> and all elements between them before <code>target</code></p>\n"},{"name":"moveRegionBefore_Nodes","is_private":false,"type":"function","params":[{"name":"target","type_names":["HTMLElement"]},{"name":"region_start_element","type_names":["HTMLElement"]},{"name":"region_end_element","type_names":["HTMLElement"]}],"param_names_string":"target, region_start_element, region_end_element","description":"<p>Version of <code>moveRegionBefore</code>, which works with DOM nodes.</p>\n"},{"name":"moveRegionBefore_Range","is_private":false,"type":"function","params":[{"name":"target","type_names":["HTMLElement"]},{"name":"region_start_element","type_names":["HTMLElement"]},{"name":"region_end_element","type_names":["HTMLElement"]}],"param_names_string":"target, region_start_element, region_end_element","description":"<p>Version of <code>moveRegionBefore</code>, which works with ranges</p>\n"},{"name":"replaceInnerRange","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"start_element, end_element, html","description":"<p>Remove all HTML nodes between the elements and insert the given html there</p>\n"},{"name":"replaceInnerRange_Nodes","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"start_element, end_element, html","description":"<p>Version of replaceInnerRange, which manipulates HTML nodes</p>\n"},{"name":"replaceInnerRange_Range","is_private":false,"type":"function","params":[{"name":"start_element","type_names":["HTMLElement"]},{"name":"end_element","type_names":["HTMLElement"]},{"name":"html","type_names":["string"]}],"param_names_string":"start_element, end_element, html","description":"<p>Version of replaceInnerRange, which works with Range API</p>\n"}]}]}